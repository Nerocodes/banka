{"version":3,"sources":["../../src/controllers/transaction.controller.js"],"names":["TransactionController","debitAnAccount","req","res","transaction","TransactionService","debitAccount","params","body","error","json","status","error1","error2","data","creditAnAccount","creditAccount"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,qBAAqB,GAAG;AAC5BC,EAAAA,cAD4B,0BACbC,GADa,EACRC,GADQ,EACH;AACvB,QAAMC,WAAW,GAAGC,wBAAmBC,YAAnB,CAAgCJ,GAAhC,EAAqCA,GAAG,CAACK,MAAzC,EAAiDL,GAAG,CAACM,IAArD,CAApB;;AACA,QAAIJ,WAAW,CAACK,KAAhB,EAAuB;AACrB,aAAON,GAAG,CAACO,IAAJ,CAAS;AACdC,QAAAA,MAAM,EAAE,GADM;AAEdF,QAAAA,KAAK,EAAEL,WAAW,CAACK;AAFL,OAAT,EAGJE,MAHI,CAGG,GAHH,CAAP;AAID;;AACD,QAAIP,WAAW,CAACQ,MAAhB,EAAwB;AACtB,aAAOT,GAAG,CAACO,IAAJ,CAAS;AACdC,QAAAA,MAAM,EAAE,GADM;AAEdF,QAAAA,KAAK,EAAEL,WAAW,CAACQ;AAFL,OAAT,EAGJD,MAHI,CAGG,GAHH,CAAP;AAID;;AACD,QAAIP,WAAW,CAACS,MAAhB,EAAwB;AACtB,aAAOV,GAAG,CAACO,IAAJ,CAAS;AACdC,QAAAA,MAAM,EAAE,GADM;AAEdF,QAAAA,KAAK,EAAEL,WAAW,CAACS;AAFL,OAAT,EAGJF,MAHI,CAGG,GAHH,CAAP;AAID;;AACD,WAAOR,GAAG,CAACO,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,GADM;AAEdG,MAAAA,IAAI,EAAEV;AAFQ,KAAT,EAGJO,MAHI,CAGG,GAHH,CAAP;AAID,GAzB2B;AA2B5BI,EAAAA,eA3B4B,2BA2BZb,GA3BY,EA2BPC,GA3BO,EA2BF;AACxB,QAAMC,WAAW,GAAGC,wBAAmBW,aAAnB,CAAiCd,GAAjC,EAAsCA,GAAG,CAACK,MAA1C,EAAkDL,GAAG,CAACM,IAAtD,CAApB;;AACA,QAAIJ,WAAW,CAACK,KAAhB,EAAuB;AACrB,aAAON,GAAG,CAACO,IAAJ,CAAS;AACdC,QAAAA,MAAM,EAAE,GADM;AAEdF,QAAAA,KAAK,EAAEL,WAAW,CAACK;AAFL,OAAT,EAGJE,MAHI,CAGG,GAHH,CAAP;AAID;;AACD,QAAIP,WAAW,CAACQ,MAAhB,EAAwB;AACtB,aAAOT,GAAG,CAACO,IAAJ,CAAS;AACdC,QAAAA,MAAM,EAAE,GADM;AAEdF,QAAAA,KAAK,EAAEL,WAAW,CAACQ;AAFL,OAAT,EAGJD,MAHI,CAGG,GAHH,CAAP;AAID;;AACD,WAAOR,GAAG,CAACO,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,GADM;AAEdG,MAAAA,IAAI,EAAEV;AAFQ,KAAT,EAGJO,MAHI,CAGG,GAHH,CAAP;AAID;AA7C2B,CAA9B;eAgDeX,qB","sourcesContent":["import TransactionService from '../services/transaction.service';\r\n\r\nconst TransactionController = {\r\n  debitAnAccount(req, res) {\r\n    const transaction = TransactionService.debitAccount(req, req.params, req.body);\r\n    if (transaction.error) {\r\n      return res.json({\r\n        status: 401,\r\n        error: transaction.error,\r\n      }).status(401);\r\n    }\r\n    if (transaction.error1) {\r\n      return res.json({\r\n        status: 404,\r\n        error: transaction.error1,\r\n      }).status(404);\r\n    }\r\n    if (transaction.error2) {\r\n      return res.json({\r\n        status: 400,\r\n        error: transaction.error2,\r\n      }).status(400);\r\n    }\r\n    return res.json({\r\n      status: 200,\r\n      data: transaction,\r\n    }).status(200);\r\n  },\r\n\r\n  creditAnAccount(req, res) {\r\n    const transaction = TransactionService.creditAccount(req, req.params, req.body);\r\n    if (transaction.error) {\r\n      return res.json({\r\n        status: 401,\r\n        error: transaction.error,\r\n      }).status(401);\r\n    }\r\n    if (transaction.error1) {\r\n      return res.json({\r\n        status: 404,\r\n        error: transaction.error1,\r\n      }).status(404);\r\n    }\r\n    return res.json({\r\n      status: 200,\r\n      data: transaction,\r\n    }).status(200);\r\n  },\r\n};\r\n\r\nexport default TransactionController;\r\n"],"file":"transaction.controller.js"}