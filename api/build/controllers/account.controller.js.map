{"version":3,"sources":["../../src/controllers/account.controller.js"],"names":["AccountController","createAnAccount","req","res","createdAccount","AccountService","createAccount","userId","body","type","error","json","status","error2","data","accountStatus","modifiedAccount","params","fetchAllAccounts","allAccounts","deleteAnAccount","deleteAccount","message"],"mappings":"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","sourcesContent":["import AccountService from '../services/account.service';\r\n\r\n\r\nconst AccountController = {\r\n  createAnAccount(req, res) {\r\n    const createdAccount = AccountService.createAccount(req.userId, req.body.type);\r\n    if (createdAccount.error) {\r\n      return res.json({\r\n        status: 401,\r\n        error: createdAccount.error,\r\n      });\r\n    }\r\n    if (createdAccount.error2) {\r\n      return res.json({\r\n        status: 400,\r\n        error: createdAccount.error2,\r\n      });\r\n    }\r\n    return res.json({\r\n      status: 201,\r\n      data: createdAccount,\r\n    });\r\n  },\r\n\r\n  accountStatus(req, res) {\r\n    const modifiedAccount = AccountService.accountStatus(req, req.params, req.body);\r\n    if (modifiedAccount.error) {\r\n      return res.json({\r\n        status: 401,\r\n        error: modifiedAccount.error,\r\n      });\r\n    }\r\n    if (modifiedAccount.error2) {\r\n      return res.json({\r\n        status: 404,\r\n        error: modifiedAccount.error2,\r\n      });\r\n    }\r\n    return res.json({\r\n      status: 200,\r\n      data: modifiedAccount,\r\n    });\r\n  },\r\n\r\n  fetchAllAccounts(req, res) {\r\n    const allAccounts = AccountService.fetchAllAccounts(req);\r\n    if (allAccounts.error) {\r\n      return res.json({\r\n        status: 401,\r\n        error: allAccounts.error,\r\n      });\r\n    }\r\n    // eslint-disable-next-line array-callback-return\r\n    return res.json({\r\n      status: 200,\r\n      data: allAccounts,\r\n    });\r\n  },\r\n\r\n  deleteAnAccount(req, res) {\r\n    const deleteAccount = AccountService.deleteAccount(req, req.params);\r\n    if (deleteAccount.error) {\r\n      return res.json({\r\n        status: 401,\r\n        error: deleteAccount.error,\r\n      });\r\n    }\r\n\r\n    if (deleteAccount.error2) {\r\n      return res.json({\r\n        status: 404,\r\n        error: deleteAccount.error2,\r\n      });\r\n    }\r\n\r\n    return res.json({\r\n      status: 200,\r\n      message: 'Account successfully deleted',\r\n    });\r\n  },\r\n};\r\n\r\nexport default AccountController;\r\n"],"file":"account.controller.js"}