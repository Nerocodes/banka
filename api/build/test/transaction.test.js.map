{"version":3,"sources":["../../src/test/transaction.test.js"],"names":["should","chai","use","chaiHttp","describe","signUpUrl","signInUrl","createAccUrl","transactionUrl","it","done","user","firstName","lastName","email","password","accType","type","request","app","post","send","end","err","res","body","have","status","be","a","data","property","token","set","error","response","accountNumber","staff","amount","errStaff","resStaff","tokenStaff","errorStaff","responseStaff","equal","debitAmount","debitErr","debitRes"],"mappings":"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","sourcesContent":["import chaiHttp from 'chai-http';\r\nimport chai from 'chai';\r\nimport app from '../index';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst should = chai.should();\r\nchai.use(chaiHttp);\r\n\r\n// Test for credit transactions\r\ndescribe('Testing credit transaction', () => {\r\n  const signUpUrl = '/api/v1/auth/signup';\r\n  const signInUrl = '/api/v1/auth/signin';\r\n  const createAccUrl = '/api/v1/accounts';\r\n  const transactionUrl = '/api/v1/transactions/';\r\n  it('should credit account if all parameters are given', (done) => {\r\n    const user = {\r\n      firstName: 'Yoshi',\r\n      lastName: 'Yama',\r\n      email: 'yoshiyama@gmail.com',\r\n      password: 'password',\r\n    };\r\n    const accType = {\r\n      type: 'savings',\r\n    };\r\n    chai.request(app)\r\n      .post(signUpUrl)\r\n      .send(user)\r\n      .end((err, res) => {\r\n        // console.log(res.body);\r\n        res.body.should.have.status(201);\r\n        res.body.should.be.a('object');\r\n        res.body.data.should.have.property('token');\r\n        const { token } = res.body.data;\r\n        chai.request(app)\r\n          .post(createAccUrl)\r\n          .set('x-access-token', token)\r\n          .send(accType)\r\n          .end((error, response) => {\r\n            response.body.should.have.status(201);\r\n            response.body.should.be.a('object');\r\n            response.body.data.should.have.property('accountNumber');\r\n            const { accountNumber } = response.body.data;\r\n            const staff = {\r\n              email: 'nerocodes@gmail.com',\r\n              password: 'password',\r\n            };\r\n            const amount = {\r\n              amount: 80000,\r\n            };\r\n            chai.request(app)\r\n              .post(signInUrl)\r\n              .send(staff)\r\n              .end((errStaff, resStaff) => {\r\n                // console.log(res.body);\r\n                resStaff.body.should.have.status(201);\r\n                resStaff.body.should.be.a('object');\r\n                resStaff.body.data.should.have.property('token');\r\n                const tokenStaff = resStaff.body.data.token;\r\n                chai.request(app)\r\n                  .post(`${transactionUrl}${accountNumber}/credit`)\r\n                  .set('x-access-token', tokenStaff)\r\n                  .send(amount)\r\n                  .end((errorStaff, responseStaff) => {\r\n                    responseStaff.body.should.have.status(200);\r\n                    responseStaff.body.should.be.a('object');\r\n                    responseStaff.body.data.should.have.property('transactionId');\r\n                    responseStaff.body.data.should.have.property('accountNumber');\r\n                    responseStaff.body.data.should.have.property('amount');\r\n                    responseStaff.body.data.should.have.property('cashier');\r\n                    responseStaff.body.data.should.have.property('transactionType');\r\n                    responseStaff.body.data.should.have.property('accountBalance');\r\n                    done();\r\n                  });\r\n              });\r\n          });\r\n      });\r\n  });\r\n\r\n  it('should not credit account if user is not cashier', (done) => {\r\n    const user = {\r\n      firstName: 'Yoshi',\r\n      lastName: 'Yama',\r\n      email: 'yoshiyama@gmail.com',\r\n      password: 'password',\r\n    };\r\n    const accType = {\r\n      type: 'savings',\r\n    };\r\n    chai.request(app)\r\n      .post(signUpUrl)\r\n      .send(user)\r\n      .end((err, res) => {\r\n        // console.log(res.body);\r\n        res.body.should.have.status(201);\r\n        res.body.should.be.a('object');\r\n        res.body.data.should.have.property('token');\r\n        const { token } = res.body.data;\r\n        chai.request(app)\r\n          .post(createAccUrl)\r\n          .set('x-access-token', token)\r\n          .send(accType)\r\n          .end((error, response) => {\r\n            response.body.should.have.status(201);\r\n            response.body.should.be.a('object');\r\n            response.body.data.should.have.property('accountNumber');\r\n            const { accountNumber } = response.body.data;\r\n            const staff = {\r\n              email: 'yoshiyama@gmail.com',\r\n              password: 'password',\r\n            };\r\n            const amount = {\r\n              amount: 80000,\r\n            };\r\n            chai.request(app)\r\n              .post(signInUrl)\r\n              .send(staff)\r\n              .end((errStaff, resStaff) => {\r\n                // console.log(res.body);\r\n                resStaff.body.should.have.status(201);\r\n                resStaff.body.should.be.a('object');\r\n                resStaff.body.data.should.have.property('token');\r\n                const tokenStaff = resStaff.body.data.token;\r\n                chai.request(app)\r\n                  .post(`${transactionUrl}${accountNumber}/credit`)\r\n                  .set('x-access-token', tokenStaff)\r\n                  .send(amount)\r\n                  .end((errorStaff, responseStaff) => {\r\n                    responseStaff.body.should.have.status(401);\r\n                    responseStaff.body.should.be.a('object');\r\n                    responseStaff.body.error.should.equal('Unauthorized user');\r\n                    done();\r\n                  });\r\n              });\r\n          });\r\n      });\r\n  });\r\n\r\n  it('should not credit account if account number does not exist', (done) => {\r\n    const staff = {\r\n      email: 'nerocodes@gmail.com',\r\n      password: 'password',\r\n    };\r\n    const amount = {\r\n      amount: 80000,\r\n    };\r\n    chai.request(app)\r\n      .post(signInUrl)\r\n      .send(staff)\r\n      .end((errStaff, resStaff) => {\r\n        // console.log(res.body);\r\n        resStaff.body.should.have.status(201);\r\n        resStaff.body.should.be.a('object');\r\n        resStaff.body.data.should.have.property('token');\r\n        const tokenStaff = resStaff.body.data.token;\r\n        chai.request(app)\r\n          .post(`${transactionUrl}123456/credit`)\r\n          .set('x-access-token', tokenStaff)\r\n          .send(amount)\r\n          .end((errorStaff, responseStaff) => {\r\n            responseStaff.body.should.have.status(404);\r\n            responseStaff.body.should.be.a('object');\r\n            responseStaff.body.error.should.equal('Account number does not match our records');\r\n            done();\r\n          });\r\n      });\r\n  });\r\n});\r\n\r\n// Test for debit transactions\r\ndescribe('Testing debit transaction', () => {\r\n  const signUpUrl = '/api/v1/auth/signup';\r\n  const signInUrl = '/api/v1/auth/signin';\r\n  const createAccUrl = '/api/v1/accounts';\r\n  const transactionUrl = '/api/v1/transactions/';\r\n  it('should debit account if all parameters are given', (done) => {\r\n    const user = {\r\n      firstName: 'Yoshi',\r\n      lastName: 'Yama',\r\n      email: 'yoshiyama@gmail.com',\r\n      password: 'password',\r\n    };\r\n    const accType = {\r\n      type: 'savings',\r\n    };\r\n    chai.request(app)\r\n      .post(signUpUrl)\r\n      .send(user)\r\n      .end((err, res) => {\r\n        // console.log(res.body);\r\n        res.body.should.have.status(201);\r\n        res.body.should.be.a('object');\r\n        res.body.data.should.have.property('token');\r\n        const { token } = res.body.data;\r\n        chai.request(app)\r\n          .post(createAccUrl)\r\n          .set('x-access-token', token)\r\n          .send(accType)\r\n          .end((error, response) => {\r\n            response.body.should.have.status(201);\r\n            response.body.should.be.a('object');\r\n            response.body.data.should.have.property('accountNumber');\r\n            const { accountNumber } = response.body.data;\r\n            const staff = {\r\n              email: 'nerocodes@gmail.com',\r\n              password: 'password',\r\n            };\r\n            const amount = {\r\n              amount: 120000,\r\n            };\r\n            chai.request(app)\r\n              .post(signInUrl)\r\n              .send(staff)\r\n              .end((errStaff, resStaff) => {\r\n                // console.log(res.body);\r\n                resStaff.body.should.have.status(201);\r\n                resStaff.body.should.be.a('object');\r\n                resStaff.body.data.should.have.property('token');\r\n                const tokenStaff = resStaff.body.data.token;\r\n                chai.request(app)\r\n                  .post(`${transactionUrl}${accountNumber}/credit`)\r\n                  .set('x-access-token', tokenStaff)\r\n                  .send(amount)\r\n                  .end((errorStaff, responseStaff) => {\r\n                    responseStaff.body.should.have.status(200);\r\n                    const debitAmount = {\r\n                      amount: 40000,\r\n                    };\r\n                    chai.request(app)\r\n                      .post(`${transactionUrl}${accountNumber}/debit`)\r\n                      .set('x-access-token', tokenStaff)\r\n                      .send(debitAmount)\r\n                      .end((debitErr, debitRes) => {\r\n                        debitRes.body.should.have.status(200);\r\n                        debitRes.body.should.be.a('object');\r\n                        debitRes.body.data.should.have.property('transactionId');\r\n                        debitRes.body.data.should.have.property('accountNumber');\r\n                        debitRes.body.data.should.have.property('amount');\r\n                        debitRes.body.data.should.have.property('cashier');\r\n                        debitRes.body.data.should.have.property('transactionType');\r\n                        debitRes.body.data.should.have.property('accountBalance');\r\n                        done();\r\n                      });\r\n                  });\r\n              });\r\n          });\r\n      });\r\n  });\r\n\r\n  it('should not debit account if user is not cashier', (done) => {\r\n    const user = {\r\n      firstName: 'Yoshi',\r\n      lastName: 'Yama',\r\n      email: 'yoshiyama@gmail.com',\r\n      password: 'password',\r\n    };\r\n    const accType = {\r\n      type: 'savings',\r\n    };\r\n    chai.request(app)\r\n      .post(signUpUrl)\r\n      .send(user)\r\n      .end((err, res) => {\r\n        // console.log(res.body);\r\n        res.body.should.have.status(201);\r\n        res.body.should.be.a('object');\r\n        res.body.data.should.have.property('token');\r\n        const { token } = res.body.data;\r\n        chai.request(app)\r\n          .post(createAccUrl)\r\n          .set('x-access-token', token)\r\n          .send(accType)\r\n          .end((error, response) => {\r\n            response.body.should.have.status(201);\r\n            response.body.should.be.a('object');\r\n            response.body.data.should.have.property('accountNumber');\r\n            const { accountNumber } = response.body.data;\r\n            const staff = {\r\n              email: 'yoshiyama@gmail.com',\r\n              password: 'password',\r\n            };\r\n            const amount = {\r\n              amount: 80000,\r\n            };\r\n            chai.request(app)\r\n              .post(signInUrl)\r\n              .send(staff)\r\n              .end((errStaff, resStaff) => {\r\n                // console.log(res.body);\r\n                resStaff.body.should.have.status(201);\r\n                resStaff.body.should.be.a('object');\r\n                resStaff.body.data.should.have.property('token');\r\n                const tokenStaff = resStaff.body.data.token;\r\n                chai.request(app)\r\n                  .post(`${transactionUrl}${accountNumber}/debit`)\r\n                  .set('x-access-token', tokenStaff)\r\n                  .send(amount)\r\n                  .end((errorStaff, responseStaff) => {\r\n                    responseStaff.body.should.have.status(401);\r\n                    responseStaff.body.should.be.a('object');\r\n                    responseStaff.body.error.should.equal('Unauthorized user');\r\n                    done();\r\n                  });\r\n              });\r\n          });\r\n      });\r\n  });\r\n\r\n  it('should not debit account if account number does not exist', (done) => {\r\n    const staff = {\r\n      email: 'nerocodes@gmail.com',\r\n      password: 'password',\r\n    };\r\n    const amount = {\r\n      amount: 80000,\r\n    };\r\n    chai.request(app)\r\n      .post(signInUrl)\r\n      .send(staff)\r\n      .end((errStaff, resStaff) => {\r\n        // console.log(res.body);\r\n        resStaff.body.should.have.status(201);\r\n        resStaff.body.should.be.a('object');\r\n        resStaff.body.data.should.have.property('token');\r\n        const tokenStaff = resStaff.body.data.token;\r\n        chai.request(app)\r\n          .post(`${transactionUrl}123456/debit`)\r\n          .set('x-access-token', tokenStaff)\r\n          .send(amount)\r\n          .end((errorStaff, responseStaff) => {\r\n            responseStaff.body.should.have.status(404);\r\n            responseStaff.body.should.be.a('object');\r\n            responseStaff.body.error.should.equal('Account number does not match our records');\r\n            done();\r\n          });\r\n      });\r\n  });\r\n\r\n  it('should not debit account if account balance is not enough', (done) => {\r\n    const user = {\r\n      firstName: 'Yoshi',\r\n      lastName: 'Yama',\r\n      email: 'yoshiyama@gmail.com',\r\n      password: 'password',\r\n    };\r\n    const accType = {\r\n      type: 'savings',\r\n    };\r\n    chai.request(app)\r\n      .post(signUpUrl)\r\n      .send(user)\r\n      .end((err, res) => {\r\n        // console.log(res.body);\r\n        res.body.should.have.status(201);\r\n        res.body.should.be.a('object');\r\n        res.body.data.should.have.property('token');\r\n        const { token } = res.body.data;\r\n        chai.request(app)\r\n          .post(createAccUrl)\r\n          .set('x-access-token', token)\r\n          .send(accType)\r\n          .end((error, response) => {\r\n            response.body.should.have.status(201);\r\n            response.body.should.be.a('object');\r\n            response.body.data.should.have.property('accountNumber');\r\n            const { accountNumber } = response.body.data;\r\n            const staff = {\r\n              email: 'nerocodes@gmail.com',\r\n              password: 'password',\r\n            };\r\n            const amount = {\r\n              amount: 80000,\r\n            };\r\n            chai.request(app)\r\n              .post(signInUrl)\r\n              .send(staff)\r\n              .end((errStaff, resStaff) => {\r\n                // console.log(res.body);\r\n                resStaff.body.should.have.status(201);\r\n                resStaff.body.should.be.a('object');\r\n                resStaff.body.data.should.have.property('token');\r\n                const tokenStaff = resStaff.body.data.token;\r\n                chai.request(app)\r\n                  .post(`${transactionUrl}${accountNumber}/debit`)\r\n                  .set('x-access-token', tokenStaff)\r\n                  .send(amount)\r\n                  .end((errorStaff, responseStaff) => {\r\n                    responseStaff.body.should.have.status(400);\r\n                    responseStaff.body.should.be.a('object');\r\n                    responseStaff.body.error.should.equal('Transaction declined: Insufficient funds');\r\n                    done();\r\n                  });\r\n              });\r\n          });\r\n      });\r\n  });\r\n});\r\n"],"file":"transaction.test.js"}