{"version":3,"sources":["../../src/services/user.service.js"],"names":["UserService","fetchAllUsers","validUsers","dummyData","users","map","user","newUser","User","id","email","firstName","lastName","password","type","isAdmin","addUser","userLength","length","lastId","newId","push","signIn","foundUser","find","singleUser","getAUser"],"mappings":";;;;;;;AAGA;;AACA;;;;AAJA;;AACA;AAKA,IAAMA,WAAW,GAAG;AAElBC,EAAAA,aAFkB,2BAEF;AACd,QAAMC,UAAU,GAAGC,sBAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAACC,IAAD,EAAU;AAC/C,UAAMC,OAAO,GAAG,IAAIC,gBAAJ,EAAhB;AACAD,MAAAA,OAAO,CAACE,EAAR,GAAaH,IAAI,CAACG,EAAlB;AACAF,MAAAA,OAAO,CAACG,KAAR,GAAgBJ,IAAI,CAACI,KAArB;AACAH,MAAAA,OAAO,CAACI,SAAR,GAAoBL,IAAI,CAACK,SAAzB;AACAJ,MAAAA,OAAO,CAACK,QAAR,GAAmBN,IAAI,CAACM,QAAxB;AACAL,MAAAA,OAAO,CAACM,QAAR,GAAmBP,IAAI,CAACO,QAAxB;AACAN,MAAAA,OAAO,CAACO,IAAR,GAAeR,IAAI,CAACQ,IAApB;AACAP,MAAAA,OAAO,CAACQ,OAAR,GAAkBT,IAAI,CAACS,OAAvB;AACA,aAAOR,OAAP;AACD,KAVkB,CAAnB;;AAWA,WAAOL,UAAP;AACD,GAfiB;AAiBlBc,EAAAA,OAjBkB,mBAiBVV,IAjBU,EAiBJ;AACZ,QAAMW,UAAU,GAAGd,sBAAUC,KAAV,CAAgBc,MAAnC;AACA,QAAMC,MAAM,GAAGhB,sBAAUC,KAAV,CAAgBa,UAAU,GAAG,CAA7B,EAAgCR,EAA/C;AACA,QAAMW,KAAK,GAAGD,MAAM,GAAG,CAAvB;AACAb,IAAAA,IAAI,CAACG,EAAL,GAAUW,KAAV;;AACAjB,0BAAUC,KAAV,CAAgBiB,IAAhB,CAAqBf,IAArB;;AACA,WAAOA,IAAP;AACD,GAxBiB;AA0BlBgB,EAAAA,MA1BkB,kBA0BXhB,IA1BW,EA0BL;AACX,QAAMiB,SAAS,GAAGpB,sBAAUC,KAAV,CAAgBoB,IAAhB,CAAqB,UAAAC,UAAU;AAAA,aAAIA,UAAU,CAACf,KAAX,IAAoBJ,IAAI,CAACI,KAA7B;AAAA,KAA/B,CAAlB;;AACA,WAAOa,SAAS,IAAI,EAApB;AACD,GA7BiB;AA+BlBG,EAAAA,QA/BkB,oBA+BTjB,EA/BS,EA+BL;AACX,QAAMH,IAAI,GAAGH,sBAAUC,KAAV,CAAgBoB,IAAhB,CAAqB,UAAAC,UAAU;AAAA,aAAIA,UAAU,CAAChB,EAAX,IAAiBA,EAArB;AAAA,KAA/B,CAAb;;AACA,WAAOH,IAAI,IAAI,EAAf;AACD;AAlCiB,CAApB;eAsCeN,W","sourcesContent":["/* eslint-disable eqeqeq */\r\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\r\n\r\nimport dummyData from '../utils/dummyData';\r\nimport User from '../models/user.model';\r\n\r\nconst UserService = {\r\n\r\n  fetchAllUsers() {\r\n    const validUsers = dummyData.users.map((user) => {\r\n      const newUser = new User();\r\n      newUser.id = user.id;\r\n      newUser.email = user.email;\r\n      newUser.firstName = user.firstName;\r\n      newUser.lastName = user.lastName;\r\n      newUser.password = user.password;\r\n      newUser.type = user.type;\r\n      newUser.isAdmin = user.isAdmin;\r\n      return newUser;\r\n    });\r\n    return validUsers;\r\n  },\r\n\r\n  addUser(user) {\r\n    const userLength = dummyData.users.length;\r\n    const lastId = dummyData.users[userLength - 1].id;\r\n    const newId = lastId + 1;\r\n    user.id = newId;\r\n    dummyData.users.push(user);\r\n    return user;\r\n  },\r\n\r\n  signIn(user) {\r\n    const foundUser = dummyData.users.find(singleUser => singleUser.email == user.email);\r\n    return foundUser || {};\r\n  },\r\n\r\n  getAUser(id) {\r\n    const user = dummyData.users.find(singleUser => singleUser.id == id);\r\n    return user || {};\r\n  },\r\n\r\n};\r\n\r\nexport default UserService;\r\n"],"file":"user.service.js"}