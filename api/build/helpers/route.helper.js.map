{"version":3,"sources":["../../src/helpers/route.helper.js"],"names":["routeHelper","validateBody","schema","req","res","next","result","Joi","validate","body","error","json","status","value","schemas","authSchema","object","keys","email","string","required","firstName","lastName","password","type","isAdmin","authLoginSchema","createAccountSchema","accountStatusSchema","debitCreditSchema","amount","number"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,WAAW,GAAG;AAClBC,EAAAA,YAAY,EAAE,sBAAAC,MAAM;AAAA,WAAI,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,UAAMC,MAAM,GAAGC,gBAAIC,QAAJ,CAAaL,GAAG,CAACM,IAAjB,EAAuBP,MAAvB,CAAf;;AACA,UAAII,MAAM,CAACI,KAAX,EAAkB;AAChB,eAAON,GAAG,CAACO,IAAJ,CAAS;AACdC,UAAAA,MAAM,EAAE,GADM;AAEdF,UAAAA,KAAK,EAAEJ,MAAM,CAACI;AAFA,SAAT,EAGJE,MAHI,CAGG,GAHH,CAAP;AAID;;AAEDT,MAAAA,GAAG,CAACM,IAAJ,GAAWH,MAAM,CAACO,KAAlB;AACA,aAAOR,IAAI,EAAX;AACD,KAXmB;AAAA,GADF;AAclBS,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAER,gBAAIS,MAAJ,GAAaC,IAAb,CAAkB;AAC5BC,MAAAA,KAAK,EAAEX,gBAAIY,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,EADqB;AAE5BC,MAAAA,SAAS,EAAEd,gBAAIY,MAAJ,GAAaC,QAAb,EAFiB;AAG5BE,MAAAA,QAAQ,EAAEf,gBAAIY,MAAJ,GAAaC,QAAb,EAHkB;AAI5BG,MAAAA,QAAQ,EAAEhB,gBAAIY,MAAJ,GAAaC,QAAb,EAJkB;AAK5BI,MAAAA,IAAI,EAAEjB,gBAAIY,MAAJ,EALsB;AAM5BM,MAAAA,OAAO,EAAElB;AANmB,KAAlB,CADL;AASPmB,IAAAA,eAAe,EAAEnB,gBAAIS,MAAJ,GAAaC,IAAb,CAAkB;AACjCC,MAAAA,KAAK,EAAEX,gBAAIY,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,EAD0B;AAEjCG,MAAAA,QAAQ,EAAEhB,gBAAIY,MAAJ,GAAaC,QAAb;AAFuB,KAAlB,CATV;AAaPO,IAAAA,mBAAmB,EAAEpB,gBAAIS,MAAJ,GAAaC,IAAb,CAAkB;AACrCO,MAAAA,IAAI,EAAEjB,gBAAIY,MAAJ,GAAaC,QAAb;AAD+B,KAAlB,CAbd;AAgBPQ,IAAAA,mBAAmB,EAAErB,gBAAIS,MAAJ,GAAaC,IAAb,CAAkB;AACrCL,MAAAA,MAAM,EAAEL,gBAAIY,MAAJ,GAAaC,QAAb;AAD6B,KAAlB,CAhBd;AAmBPS,IAAAA,iBAAiB,EAAEtB,gBAAIS,MAAJ,GAAaC,IAAb,CAAkB;AACnCa,MAAAA,MAAM,EAAEvB,gBAAIwB,MAAJ,GAAaX,QAAb;AAD2B,KAAlB;AAnBZ;AAdS,CAApB;eAuCepB,W","sourcesContent":["import Joi from 'joi';\r\n\r\nconst routeHelper = {\r\n  validateBody: schema => (req, res, next) => {\r\n    const result = Joi.validate(req.body, schema);\r\n    if (result.error) {\r\n      return res.json({\r\n        status: 400,\r\n        error: result.error,\r\n      }).status(400);\r\n    }\r\n\r\n    req.body = result.value;\r\n    return next();\r\n  },\r\n\r\n  schemas: {\r\n    authSchema: Joi.object().keys({\r\n      email: Joi.string().email().required(),\r\n      firstName: Joi.string().required(),\r\n      lastName: Joi.string().required(),\r\n      password: Joi.string().required(),\r\n      type: Joi.string(),\r\n      isAdmin: Joi.boolean(),\r\n    }),\r\n    authLoginSchema: Joi.object().keys({\r\n      email: Joi.string().email().required(),\r\n      password: Joi.string().required(),\r\n    }),\r\n    createAccountSchema: Joi.object().keys({\r\n      type: Joi.string().required(),\r\n    }),\r\n    accountStatusSchema: Joi.object().keys({\r\n      status: Joi.string().required(),\r\n    }),\r\n    debitCreditSchema: Joi.object().keys({\r\n      amount: Joi.number().required(),\r\n    }),\r\n  },\r\n};\r\n\r\nexport default routeHelper;\r\n"],"file":"route.helper.js"}